name: Simple Fortune Cookie
#on:
#  pull_request:
#    branches: [main]
on: push
env: 
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
jobs:
  Clone-down:
    name: Clone-down repo
    runs-on: ubuntu-latest
    container: golang:latest
    steps:
    - uses: actions/checkout@v2
    - name: Upload repository
      uses: actions/upload-artifact@v2
      with:
        name: Code
        path: .       
  # Build:
  #   runs-on: ubuntu-latest
  #   needs: Clone-down
  #   container: docker/compose 
  #   steps:
  #   - name: Download code
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: Code
  #       path: .
  #   - name: Run application
  #     run: docker-compose up -d --build
  # Test:
  #   runs-on: ubuntu-latest
  #   needs: Clone-down
  #   container: golang:latest
  #   steps:
  #   - name: Download code
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: Code
  #       path: .     
  #   - name: Run test
  #     run: cd ci && chmod +x test.sh && ./test.sh
  # Docker-image:
  #   runs-on: ubuntu-latest
  #   needs: [Build,Test]
  #   steps:
  #   - name: Download code
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: Code
  #       path: .
  #   - name: Build docker
  #     run: chmod +x ci/build-docker.sh && export GIT_COMMIT="GA-$GITHUB_SHA" && ci/build-docker.sh
  #   - name: Push to DockerHub
  #     run: chmod +x ci/push-docker.sh && export GIT_COMMIT="GA-$GITHUB_SHA" && ci/push-docker.sh   
  Release:
    name: Release
    runs-on: ubuntu-latest
    #needs: Docker-image
    needs: Clone-down
    steps:
    - name: Download code
      uses: actions/download-artifact@v2
      with:
        name: Code
        path: .  
    - name: Decode
    - uses: actions/checkout@v2
      run: echo "$KUBE_CONFIG_DATA" | base64 -d > config.txt
    - name: Trigger deploy
      run: |
        kubectl --kubeconfig=config.txt apply -f backend-svc.yml
        kubectl --kubeconfig=config.txt apply -f frontend-svc.yml
        kubectl --kubeconfig=config.txt apply -f deployment-backend.yml
        kubectl --kubeconfig=config.txt apply -f deployment-db-server.yml
        kubectl --kubeconfig=config.txt apply -f deployment-frontend.yml 
    - name: Functional testing of the URL
      run: curl -s http://localhost:8080